version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://postgres:5432/novel_db
      DATABASE_USERNAME: novel_user
      DATABASE_PASSWORD: novel_password
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
      - logstash
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ~/.m2:/root/.m2

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_EDITOR: atom
      NEXT_PUBLIC_API_URL: http://localhost:8081
      NEXT_PUBLIC_WS_URL: ws://localhost:8081/ws
    depends_on:
      - backend
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  rabbitmq:
    image: rabbitmq:3-management
    command: >
      bash -c "rabbitmq-plugins enable rabbitmq_stomp &&
              rabbitmq-server"
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management
      - "61613:61613" # STOMP
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: novel_user
      POSTGRES_PASSWORD: novel_password
      POSTGRES_DB: novel_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Disable HTTPS & auth
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 20
      start_period: 40s

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5044:5044"
      - "5000:5000"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  postgres_data: {}
  es_data: {}
  redis_data: {}
  logstash_data: {}
