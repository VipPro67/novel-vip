services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://postgres:5432/novel_db
      DATABASE_USERNAME: novel_user
      DATABASE_PASSWORD: novel_password
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
      - logstash
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"       # AMQP (used by Spring Boot)
      - "15672:15672"     # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: novel_user
      POSTGRES_PASSWORD: novel_password
      POSTGRES_DB: novel_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"  # HTTP API
      - "9300:9300"  # Transport API
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/ || exit 1"]
      interval: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5044:5044"  # Beats input (example)
      - "5000:5000"  # TCP input (example)
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600/_node/pipelines?pretty || exit 1"]
      interval: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 10s
      retries: 5

volumes:
  postgres_data: {}
  es_data: {}
  redis_data: {}
  logstash_data: {}